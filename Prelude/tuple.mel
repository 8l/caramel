-- N-Tuples
tupler a b c      = (a (d -> (b d c)))
tuple             = (n -> (n tupler id id))
tuple.reversed    = (n -> (n (r c v -> (r (x -> (c (x v))))) id id))
tuple.mapped      = (n g -> (n (flip on (f v a -> (f a (g v)))) id id))
tuple.map         = (n g t -> (t (n (flip on (f v a -> (f a (g v)))) id id)))
tuple.fold        = (n t -> (cons nil -> (t (n (flip on (f v a -> (f (cons v a)))) (e -> (e nil)) id))))
tuple.shift_right = (n t -> (t (n tupler (a b c -> (a (c b))) true id)))
tuple.shift_left  = (n t -> (t (lst -> (n tupler (e x -> (e x lst)) (a b -> a) lst))))
tuple.get         = (n nth t -> (t (nth_arg_of (succ n) nth) id))
tuple.mut         = (nth f t nt -> (t (nth (a b c -> (a (b c))) (e x -> (e (f x))) nt)))
tuple.set         = (nth val -> (tuple.mut nth (const val)))
tuple.repeat      = (n x f -> (n (t -> (t x)) f))
tuple.rev_enum    = (n -> ((f x t -> (n (t c -> (t (a -> (c (f a) a)))) (e -> (e x)) (const t))) succ 0))
tuple.head        = (n -> (t -> (t (first_arg_of n))))
tuple.zipp.init   = (a b -> (a (ae -> (b (be -> (t -> (ae be t)))))))
tuple.zipp.ping   = (na ea -> (na (nae nav -> (ea (be tup -> (be nae nav tup))))))
tuple.zipp.pong   = (nb eb -> (nb (nbe nbv -> (eb (nae nav tup -> (nae nbe tup (nav nbv)))))))
tuple.zipp.next   = (zipper na nb -> (zipper (tuple.zipp.ping na) (tuple.zipp.pong nb)))
tuple.zipp.stop   = (zipper a b -> (zipper (e -> (a (e id))) (e -> (b (e id)))))
tuple.zipp        = (n -> (tuple.zipp.stop (n tuple.zipp.next tuple.zipp.init)))
tuple.zip_with    = (n f a b -> (tuple.zipp n (tuple.map n f a) b))
tuple.zip         = (n -> (tuple.zip_with n (tuple 2)))
tuple.concat      = (flip comp)
tuple.nth_of      = (nth n -> (lens (tuple.get n nth) (tuple.set nth)))

-- 0-Tuple (unit)
unit.unit         = (tuple 0)

-- 1-Tuple (single)
single            = (tuple 1)
single.get_first  = (tuple.get 1 0)
single.set_first  = (tuple.set 1 0)
single.mut_first  = (tuple.set 1 0)
single.first      = (tuple.nth_of 0 1)
single.map        = (tuple.map 1)

-- 2-Tuple (pair)
pair              = (tuple 2)
pair.get_first    = (tuple.get 2 0)
pair.mut_first    = (tuple.mut 0)
pair.set_first    = (tuple.set 0)
pair.get_second   = (tuple.get 2 1)
pair.mut_second   = (tuple.mut 1)
pair.set_second   = (tuple.set 1)
pair.first        = (tuple.nth_of 0 2)
pair.second       = (tuple.nth_of 1 2)
pair.map          = (tuple.map 2)
pair.zipp         = (tuple.zip 2)
pair.zip_with     = (tuple.zip_with 2)
pair.fold         = (tuple.fold 2)

-- 3-Tuple (triple)
triple            = (tuple 3)
triple.get_first  = (tuple.get 3 0)
triple.mut_first  = (tuple.mut 0)
triple.set_first  = (tuple.set 0)
triple.get_second = (tuple.get 3 1)
triple.mut_second = (tuple.mut 1)
triple.get_third  = (tuple.get 3 2)
triple.mut_third  = (tuple.mut 2)
triple.first      = (tuple.nth_of 0 3)
triple.second     = (tuple.nth_of 1 3)
triple.third      = (tuple.nth_of 2 3)
triple.map        = (tuple.map 3)
